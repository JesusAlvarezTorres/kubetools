{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "dvmImagePublisher": {
      "type": "string",
      "defaultValue": "microsoft-aks",
      "metadata": {
        "description": "Azure VM image publisher to be used for the DVM"
      }
    },
    "dvmImageOffer": {
      "type": "string",
      "defaultValue": "aks",
      "metadata": {
        "description": "Azure VM image offer to be used for the DVM"
      }
    },
    "dvmImageSku": {
      "type": "string",
      "defaultValue": "aks-engine-ubuntu-1604-202003",
      "metadata": {
        "description": "Azure VM image sku to be used for the DVM"
      }
    },
    "dvmImageVersion": {
      "type": "string",
      "defaultValue": "2020.03.19",
      "metadata": {
        "description": "Azure VM image version to be used for the DVM"
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('dvmImagePublisher')]",
            "offer": "[parameters('dvmImageOffer')]",
            "sku": "[parameters('dvmImageSku')]",
            "version": "[parameters('dvmImageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}